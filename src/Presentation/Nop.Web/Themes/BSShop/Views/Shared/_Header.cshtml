@using Microsoft.AspNetCore.Http
@using Nop.Core.Domain.Customers
@using Nop.Services.Customers
@using Nop.Core.Infrastructure
@using Nop.Core
@inject IWebHelper webHelper
@inject IHttpContextAccessor httpContextAccessor
@inject IWorkContext workContext

<div class="header">
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderBefore })
    <div class="header-upper">
        <div class="header-selectors-wrapper">
            @if (EngineContext.Current.Resolve<IWorkContext>().CurrentCustomer.IsInCustomerRole("Administrators"))
            {
                @await Component.InvokeAsync("TaxTypeSelector")
                @await Component.InvokeAsync("CurrencySelector")
            }
            @await Component.InvokeAsync("LanguageSelector")
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderSelectors })
        </div>
        <div class="header-links-wrapper">
            @await Component.InvokeAsync("HeaderLinks")
            @await Component.InvokeAsync("FlyoutShoppingCart")
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderMiddle })
    <div class="header-lower">
        <div class="header-logo">
            @await Component.InvokeAsync("Logo")
        </div>
        <div class="search-box store-search-box">
            @await Component.InvokeAsync("SearchBox")
        </div>
    </div>
    @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.HeaderAfter })
</div>
